UID=os.environ.get("id -u")
GID=os.environ.get("id -g")
#Instead of using config.yaml, 3plex params are received from frontend and passed by server.py
#es --config min_len=-1 max_len=30


rule run_3plex:
	input:
		ssRNA_file="{DATA_DIR}/{ssRNA}.fa",
		dsDNA_file="{DATA_DIR}/{dsDNA}.fa"
	output:
		"{DATA_DIR}/{ssRNA}__{dsDNA}__output.txt",
	threads: 1
	resources:
		partition="low",
		mem_mb=4000
	shell: """
			docker run --user `id -u`:`id -g` --rm -v {wildcards.DATA_DIR}:{wildcards.DATA_DIR}  imolineris/3plex:v0.1.2-beta \
				-j 1 -l {config[min_len]} -L {config[max_len]} -e {config[error_rate]} \
				-g {config[guanine_rate]} -r {config[filter_repeat]} -c {config[consecutive_errors]} \
				-s {config[SSTRAND]} {input.ssRNA_file} {input.dsDNA_file} \
					{wildcards.DATA_DIR}; 
					
		zcat {wildcards.DATA_DIR}/{wildcards.ssRNA}_ssmasked-dsDNA.tpx.stability.gz | cut -f 2,3,14 | unhead | bsort -k3,3nr -k1,1n  -S5% > {wildcards.DATA_DIR}/cutSort
		./local/bin/tfo_c.py {wildcards.DATA_DIR} < {wildcards.DATA_DIR}/cutSort
		echo "Job completed" > {wildcards.DATA_DIR}/{wildcards.ssRNA}__{wildcards.dsDNA}__output.txt
	"""
